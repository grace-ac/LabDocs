# Roberts Lab
# Aquatic & Fishery Sciences
# University of Washington
# Bioinformatics Image

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #
# List of bioinformatics software in this image #
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #
#						#
#########################			#
# SOFTWARE	VERSION #			#
#########################			#
# bedtools	2.25.0  #			#
# bismark	0.15.0  #			#
# blast		2.3.0+  #			#
# bowtie2	2.2.8   #			#
# bsmap		2.90    #			#
# cufflinks	2.1.1   #			#
# fastqc	0.11.5  #			#
# fastx_toolkit	0.0.13  #			#
# R		3.2.5   #			#
# Rstudio Server0,99	#			#
# samtools	0.1.19  #			#
# tophat	2.1.1   #			#
# trimmomatic	0.36    #			#
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## #



FROM debian:8
MAINTAINER Sam White <samwhite@uw.edu>

# Get software dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    openjdk-7-jdk \
    software-properties-common \
    build-essential \
    pkg-config \
    python-setuptools \
    python-numpy \
    python-scipy \
    libncurses5-dev \
    libncursesw5-dev \
    libpng12-0 \
    zlib1g-dev \
    dialog \
    sudo \
    nano \
    curl \
    git \
    man \
    unzip \
    bzip2 \
    wget \
    automake \
    gfortran \
    gcc-multilib \
    gobjc++ \
    aptitude \
    xorg-dev \
    apt-utils \
    texinfo \
    gdebi-core \
    libsparsehash-dev \
    file \
    ca-certificates \
    libapparmor1 \
    libedit2 \
    libcurl4-openssl-dev \
    libssl1.0.0 \
    libssl-dev \
    psmisc
    
RUN aptitude update && \
    aptitude install -y \
    libreadline-dev
    
# Make bioinformatics directory
RUN mkdir /usr/local/bioinformatics

# Set working directory
WORKDIR /usr/local/bioinformatics

# Add bioinformatics directory to PATH
ENV PATH /usr/local/bioinformatics:$PATH

# Install bedtools (v2.25.0)
RUN wget https://github.com/arq5x/bedtools2/releases/download/v2.25.0/bedtools-2.25.0.tar.gz \
	&& tar -zxvf bedtools-2.25.0.tar.gz \
	&& make -C /usr/local/bioinformatics/bedtools2 \
	&& rm bedtools-2.25.0.tar.gz

ENV PATH /usr/local/bioinformatics/bedtools2:$PATH
    
# Install blast (v2.3.0+)
RUN wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.3.0+-x64-linux.tar.gz \
	&& tar -zxvpf ncbi-blast-2.3.0+-x64-linux.tar.gz \
	&& rm ncbi-blast-2.3.0+-x64-linux.tar.gz

ENV PATH /usr/local/bioinformatics/ncbi-blast-2.3.0+/bin:$PATH

# Install bowtie2 (v2.2.8)
RUN wget --output-document=bowtie2-2.2.8-linux-x86_64.zip \
	https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.8/bowtie2-2.2.8-linux-x86_64.zip/download \
	&& unzip bowtie2-2.2.8-linux-x86_64.zip \
	&& rm bowtie2-2.2.8-linux-x86_64.zip

ENV PATH /usr/local/bioinformatics/bowtie2-2.2.8:$PATH

# Install cufflinks (v2.1.1)
RUN wget http://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.1.1.tar.gz \
	&& tar -zxvf cufflinks-2.1.1.tar.gz \
	&& rm cufflinks-2.1.1.tar.gz

ENV PATH /usr/local/bioinformatics/cufflinks-2.1.1:$PATH

# Install FastQC (v0.11.5)
RUN wget http://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip \
	&& unzip fastqc_v0.11.5.zip \
	&& chmod 755 /usr/local/bioinformatics/FastQC/fastqc \
	&& rm fastqc_v0.11.5.zip

ENV PATH /usr/local/bioinformatics/FastQC:$PATH
	
# Install samtools0.1.19 (version required for use with Stacks)
RUN wget --output-document=samtools-0.1.19.tar.bz2 \
	http://sourceforge.net/projects/samtools/files/samtools/0.1.19/samtools-0.1.19.tar.bz2/download \
	&& tar -xjf samtools-0.1.19.tar.bz2 \
	&& make -C /usr/local/bioinformatics/samtools-0.1.19/ \
	&& rm samtools-0.1.19.tar.bz2

# Install tophat (v2.1.1)
RUN wget https://ccb.jhu.edu/software/tophat/downloads/tophat-2.1.1.Linux_x86_64.tar.gz \
	&& tar -zxvf tophat-2.1.1.Linux_x86_64.tar.gz \
	&& rm tophat-2.1.1.Linux_x86_64.tar.gz

ENV PATH /usr/local/bioinformatics/tophat-2.1.1.Linux_x86_64:$PATH

# Install trimmomatic (v0.36)
RUN wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.36.zip \
	&& unzip Trimmomatic-0.36.zip \
	&& echo 'alias trimmomatic="java -jar /usr/local/bioinformatics/Trimmomatic-0.36/trimmomatic-0.36.jar"' >> ~/.bashrc \
	&& rm Trimmomatic-0.36.zip

# Install fastx toolkit (v0.0.13)
RUN wget http://hannonlab.cshl.edu/fastx_toolkit/fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2 \
	&& mkdir /usr/local/bioinformatics/fastx_toolkit \
	&& tar -xjf fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2 -C /usr/local/bioinformatics/fastx_toolkit \
	&& rm fastx_toolkit_0.0.13_binaries_Linux_2.6_amd64.tar.bz2

ENV PATH /usr/local/bioinformatics/fastx_toolkit/bin:$PATH

# Install bismark (v0.15.0)
RUN wget http://www.bioinformatics.babraham.ac.uk/projects/bismark/bismark_v0.15.0.tar.gz \
	&& tar -xzf bismark_v0.15.0.tar.gz \
	&& rm bismark_v0.15.0.tar.gz

ENV PATH /usr/local/bioinformatics/bismark_v0.15.0:$PATH

# Install bsmap (v2.90)
RUN wget http://lilab.research.bcm.edu/dldcc-web/lilab/yxi/bsmap/bsmap-2.90.tgz \
	&& tar -xzf bsmap-2.90.tgz \
	&& (cd /usr/local/bioinformatics/bsmap-2.90 && exec make && make install) \
	&& rm bsmap-2.90.tgz

ENV PATH /usr/local/bioinformatics/bsmap-2.90:$PATH

# Install pyrad (v3.0.66)
RUN wget https://github.com/dereneaton/pyrad/archive/3.0.66.tar.gz \
	&& tar -xzf 3.0.66.tar.gz \
	&& (cd /usr/local/bioinformatics/pyrad-3.0.66 && exec python setup.py install && pyrad -h) \
	&& rm 3.0.66.tar.gz

ENV PATH /usr/local/bioinformatics/pyrad-3.0.66:$PATH

# Install muscle (v3.8.31)
RUN wget http://www.drive5.com/muscle/downloads3.8.31/muscle3.8.31_i86linux64.tar.gz \
	&& tar -xzf muscle3.8.31_i86linux64.tar.gz \
	&& rm muscle3.8.31_i86linux64.tar.gz

ENV PATH /usr/local/bioinformatics/muscle3.8.31_i86linux64:$PATH

# Install vsearch (v1.11)
RUN wget https://github.com/torognes/vsearch/releases/download/v1.11.1/vsearch-1.11.1-linux-x86_64.tar.gz \
	&& tar -xzf vsearch-1.11.1-linux-x86_64.tar.gz \
	&& rm vsearch-1.11.1-linux-x86_64.tar.gz

ENV PATH /usr/local/bioinformatics/vsearch-1.11.1-linux-x86_64/bin:$PATH

# Install pear
RUN wget http://sco.h-its.org/exelixis/web/software/pear/files/pear-0.9.6-bin-64.tar.gz \
	&& tar -xzf pear-0.9.6-bin-64.tar.gz \
	&& rm pear-0.9.6-bin-64.tar.gz

ENV PATH /usr/local/bioinformatics/pear-0.9.6-bin-64:$PATH

# Install R (v3.2.5)
RUN wget https://cran.r-project.org/src/base/R-3/R-3.2.5.tar.gz \
	&& tar -xzf R-3.2.5.tar.gz \
	&& (cd /usr/local/bioinformatics/R-3.2.5 && ./configure; make) \
	&& rm R-3.2.5.tar.gz

ENV PATH /usr/local/bioinformatics/R-3.2.5/bin:$PATH

# Install Rstudio Server (v.99)
RUN wget https://download2.rstudio.org/rstudio-server-0.99.896-amd64.deb \
	&& dpkg -i rstudio-server-0.99.896-amd64.deb \
	&& rm rstudio-server-*-amd64.deb \
	&& ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin \
	&& ln -s /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin \
	&& wget https://github.com/jgm/pandoc-templates/archive/1.15.0.6.tar.gz \
  	&& mkdir -p /opt/pandoc/templates && tar zxf 1.15.0.6.tar.gz \
	&& cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates* \
	&& mkdir /root/.pandoc && ln -s /opt/pandoc/templates /root/.pandoc/templates

# Continue Rstudio server installation
# Taken from rocker/rstudio Dockerhub
# NOTE: Added -e flag to echo statement for proper interpreation of newline "\n"
## Ensure that if both httr and httpuv are installed downstream, oauth 2.0 flows still work correctly. 
RUN echo -e '\n\
\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST \
\n# is not set since a redirect to localhost may not work depending upon \
\n# where this Docker container is running. \
\nif(is.na(Sys.getenv("HTTR_LOCALHOST", unset=NA))) { \
\n  options(httr_oob_default = TRUE) \
\n}' >> /usr/local/bioinformatics/R-3.2.5/src/gnuwin32/fixed/etc/Rprofile.site

# Continue Rstudio server installation
# Taken from rocker/rstudio Dockerhub
## A default user system configuration. For historical reasons, 
## we want user to be 'rstudio', but it is 'docker' in r-base 
RUN usermod -l rstudio docker \
	&& usermod -m -d /home/rstudio rstudio \
	&& groupmod -n rstudio docker \
	&& echo '"\e[5~": history-search-backward' >> /etc/inputrc \
	&& echo '"\e[6~": history-search-backward' >> /etc/inputrc \
	&& echo "rstudio:rstudio" | chpasswd

# Continue Rstudio server installation
# Taken from rocker/rstudio Dockerhub
## Use s6
RUN wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz \
	&& tar xzf /tmp/s6-overlay-amd64.tar.gz -C /

# Expose Ports
EXPOSE 8787
